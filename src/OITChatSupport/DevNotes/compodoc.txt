Installation: npm install --save-dev @compodoc/compodoc

Default Port: 8080



CLI:
	compodoc <src> [options]

	Options:
		-h: help
		-V: version
		-p [tsconfig.json]: use the config file
		-d [dir]: output to dir
		-y [file]: external style theme
		-n [name]: title of docs
		-a [dir]: external assets dir to copy in generated docs folder
		-o: open generated docs
		-s: serve generated docs
		-r [portno]: specify the port to serve to
		-w: watch src files after server to foce doc rebuild as it changes (like HMR)
		-theme [theme]: default (gitbook), can choose (laravel, original, postmark, readthedocs, strip, vagrant)
		--toggleMenuItems [items]: default (['all']), can choose( ['modules', 'components', 'directives', 'injectables', 'classes', 'interfaces', 'pipes', 'additionalPages'])
		--includes [path]: Path of external markdown files to include
		--includesName [name]: name of item menu of external markdown files
		--coverageTest: tests command of doc coverage with a threshold
		--disableSourceCode: exclude tabs/links to the source code
		--disableGraph: don't render the dep graph
		--disableCoverage: exclude documentation coverage report
		--disablePrivateOrInternalSupport: exclude @internal, private members, and lifecycle hooks

	single quotes for multiple words: compodoc -n 'My Title'

Running in Package.json scripts: 
	npm run compodoc
	"compodoc": "./node_modules/.bin/compodoc -p src/tsconfig.app.json -n \"My app documentation""

Render Docs:
	compodoc -p src/tsconfig.json

Render Docs wile providing the src folder:
	compodoc src -p src/tsconfig.json

Server rendered docs 
	compodoc -s
	compodoc -s -d ./doc (specify the socs for the src)


Render and serve:
	compodoc -p src/tsconfig.json -s



How it works:
	Uses Typscript AST parser
	commons must be in the JSDoc comment format
	1. 
		/**
		 *
		 */

	2. all lines must have a blank line between

	3. supports the following tags
		@returns 
		@param {string} target   The target to process see {@link Todo}
		{@link www.james.com}, [Google]{@link https://google.com}, {@link Todo|TodoClass}
		@example: use for providing a use case example

	4. Indentations: 
		to use comment indents must have min of 13 space characters
		`` `
		&lt:mwl-clanedar-day-view
						.....
						..... &gt;
		&lt;/mwl-calendar-day-view%gt;
		`` `
		or
		@example
		<mwl-calendar-day-view
						[viewDate]="viewDate"
						[events]="events" >
		</mwl-calendar-day-view>

Displaying view of routes:
	Follow the angular style guide for routing
		const APP_ROUTES: Routes = [
			{ path: ...},
			{ path: ...}
		];
		..
		RouterModule.forRoot(APP_ROUTES)

	It does not support spread (...) variables in routes[] definition: const APP_ROUTES: Routes = [...ROUTES];


Documentation coverage: 
	calcuated for all statement of the file including decorators
	private functions are excluded

Styling the docs:
	compodoc -p src/tsconfig.json -y your_theme_styles/

	The folder must include a 'style.css' file with the following imports inside it
	@import "./reset.css"
	@import "./bootstrap.min.css";
	@import "./boostrap-card.css";
	@import "./font-awesome.min.css";
	@import "./compodoc.css";

	you can override the default boostrap theme by including your own 'bootstrap.min.css' file

	if the class, component, module, etc needs more room for detailed comments, create a XXX.component.md file inside the component folder
	which allows compodoc to create new tab for it


Adding external files:
	Compodoc can extend support to md files including the main README.md file

	For additional external md files
	1. create a folder for md files
	2. folder must contain a 'summary.json' file defining the structure of the md files
	3. compodoc -p ... --include <external file dir>

	summary.json structure:
	[
		{
			"title": "<title>"
			"file": "<filename>"
		},
		{
			"title": "<title>"
			"file": "<filename>"
			"children": [
				{
					"title": "<subdir-title>"
					"file": "<subdir-file>"
					...
				}
			]
		}
		
	]

Exclude certain files from having doc generation
	in tsconfig.json:
		exclude: ['app/myfile.ts', '**/*.spec.ts']


Extension packages:
	https://www.npmjs.com/package/gulp-compodoc
	https://www.npmjs.com/package/generator-jhipster-compodoc

Themes in bootstrap:
	https://bootswatch.com/
