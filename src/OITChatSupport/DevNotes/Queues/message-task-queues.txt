RabbitMQ: message queue/broker
	- can use built in layer of security via SSL certificates to encrypt data 
	- stable and can handle are numbers of events per seconds and multiple connections w/o bottlenecks
	- has built in cluster implementation that can be used with load balancers for scalable distributed systems
	- https://stackoverflow.com/questions/46029281/vs-net-2017-forces-using-stackexchange-redis-1-2-4-0-in-asp-net-2-0-core-app
	https://gist.github.com/JonCole/925630df72be1351b21440625ff2671f#file-redis-bestpractices-stackexchange-redis-md
	https://stackexchange.github.io/StackExchange.Redis/Basics
	https://github.com/marcoCasamento/Hangfire.Redis.StackExchange/tree/master/Hangfire.Redis.StackExchange
	https://medium.com/@KevinHoffman/caching-distributed-work-output-in-redis-with-asp-net-core-7d77695e6757
	https://surfingthecode.com/2017/08/redis-based-distributed-cache-in-asp.net-core/
	https://github.com/myloveCc/NETCore.RedisKit/blob/master/src/NETCore.RedisKit/Infrastructure/RedisProvider.cs